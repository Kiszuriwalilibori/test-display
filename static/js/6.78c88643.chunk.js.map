{"version":3,"sources":["components/details/Trending.jsx","components/details/Header.jsx","components/SearchSection.jsx","components/ErrorMessage.jsx","components/details/SearchButton.jsx","components/details/ClearButton.jsx","components/details/Input.jsx","components/details/NoHintsMessage.jsx","components/details/ImagesHint.jsx","components/Form.jsx"],"names":["Trending","React","props","ary","className","map","item","index","arr","length","Header","href","SearchSection","withRouter","connect","state","backgroundImage","images","dispatch","fetchBackgroundImage","useEffect","Form","trending","ErrorMessage","MyAlert","withStyles","root","background","color","fontSize","border","boxShadow","Alert","isOpen","error","value","message","code","close","clearError","open","autoHideDuration","onClose","severity","variant","SearchButton","width","height","version","viewBox","aria-hidden","d","ClearButton","isVisible","click","onClick","Input","pattern","callback","type","onChange","autoCapitalize","placeholder","NoHintsMessage","hintsMessageVisible","classy","path","ImagesHint","hint","label","data-image_hint","hints","fetchHints","str","clearHints","fetchImages","history","useHistory","useState","setPattern","match","createFormStyleLocationRelative","e","target","isClearable","menuIsOpen","selectValue","push","options","id"],"mappings":"sKAgBeA,EAdEC,QAAW,SAAAC,GAAU,IAC5BC,EAAQD,EAARC,IACR,OACE,qBAAIC,UAAW,cAAf,UACE,sBAAMA,UAAW,mCAAjB,wBACCD,EAAIE,KAAI,SAACC,EAAMC,EAAOC,GAAd,OACP,oBAAIJ,UAAW,oDAAf,SACGG,IAAUC,EAAIC,OAAS,EAAIH,EAAOA,EAAO,KAD4BC,YCUjEG,EAhBAT,QAAW,WACxB,OACE,qCACE,sBAAMG,UAAU,mBAAhB,sBACA,qBAAIA,UAAU,gDAAd,0CAEE,oBAAGA,UAAU,kBAAkBO,KAAK,+BAApC,UACG,IADH,6BAKF,mBAAGP,UAAU,gBAAb,mD,QC0BCQ,EAAgBC,YAAWC,aARV,SAAAC,GAAK,MAAK,CAChCC,gBAAiBD,EAAME,OAAOD,oBAGL,SAAAE,GAAQ,MAAK,CACtCC,qBAAsB,kBAAMD,EAASC,mBAGLL,EA7BlB,SAACZ,GAAW,IACrBiB,EAAyCjB,EAAzCiB,qBAAyCjB,EAAnBc,gBAO3B,OALAI,qBAAU,WAERD,MACD,CAACA,IAGA,yBAASf,UAAW,qBAApB,SACA,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,cAACiB,EAAA,EAAD,IACA,cAAC,EAAD,CAAUlB,IAAMmB,MAChB,cAACC,EAAA,EAAD,aAgBUX,a,4FChCVY,EAAUC,YAAW,CACzBC,KAAM,CACJC,WAAY,WACZC,MAAO,UACPC,SAAU,UACVC,OAAQ,mBACRC,UACE,uMAPUN,CASbO,KA4BGT,EAAeT,aALG,SAACC,GAAD,MAAY,CAClCkB,OAAQlB,EAAME,OAAOiB,MAAMC,MAC3BC,QAASrB,EAAME,OAAOiB,MAAMG,SAPH,SAACnB,GAAD,MAAe,CAExCoB,MAAO,kBAAMpB,EAASqB,mBAQHzB,EA1BL,SAACZ,GAAW,IAElB+B,EAA2B/B,EAA3B+B,OAAQK,EAAmBpC,EAAnBoC,MAAOF,EAAYlC,EAAZkC,QAEvB,OACE,cAAC,IAAD,CAAUI,KAAMP,EAAQQ,iBAAkB,IAAMC,QAASJ,EAAzD,SACE,eAACd,EAAD,CAASmB,SAAS,UAAUC,QAAQ,SAApC,+CAEE,uBACER,EACF,+BAqBOb,O,yFCrCAsB,EAVM,WACjB,OACE,wBAAQzC,UAAU,eAAlB,SACE,qBAAK0C,MAAM,KAAKC,OAAO,KAAK3C,UAAU,YAAY4C,QAAQ,MAAMC,QAAQ,YAAYC,cAAY,QAAhG,SACE,sBAAMC,EAAE,gICODC,EAZG,SAAAlD,GAAU,IAClBmD,EAAqBnD,EAArBmD,UAAWC,EAAUpD,EAAVoD,MAEnB,OAAOD,EAAU5C,OACf,wBAAQL,UAAU,oBAAoBmD,QAASD,EAA/C,SACE,qBAAKR,MAAM,KAAKC,OAAO,KAAK3C,UAAU,wBAAwB4C,QAAQ,MAAMC,QAAQ,YAAYC,cAAY,QAA5G,SACE,sBAAMC,EAAE,oIAGV,MCJOK,EALD,SAAAtD,GAAU,IACduD,EAAsBvD,EAAtBuD,QAASC,EAAaxD,EAAbwD,SACjB,OAAO,uBAAOC,KAAK,OAAOvD,UAAU,cAAc+B,MAAOsB,EAASG,SAAUF,EAAUG,eAAe,OAAOC,YAAY,wC,QCa3GC,EADQjD,aAJC,SAAAC,GAAK,MAAK,CAChCsC,UAAWtC,EAAME,OAAO+C,uBAGHlD,EAZF,SAAAZ,GAAU,IACrBmD,EAAoBnD,EAApBmD,UACFY,EAAmB,YADG/D,EAATgE,KACkB,mCAAqC,4BAG1E,OAAOb,EAAY,oBAAIjD,UAAa6D,EAAjB,6EAA8F,QCCpGE,EARI,SAAAjE,GAAU,IACnBkE,EAASlE,EAATkE,KACR,OAAOA,GAAQA,EAAKC,OAASD,EAAKjC,MAChC,qBAAKmC,kBAAiBF,EAAKjC,MAAO/B,UAAU,cAA5C,SACGgE,EAAKC,QAEN,MCmFAhD,EAAOR,YAAWC,aAJA,SAAAC,GAAK,MAAK,CAChCwD,MAAOxD,EAAME,OAAOsD,UAPK,SAAArD,GAAQ,MAAK,CACtCsD,WAAY,SAAAC,GAAG,OAAIvD,EAASsD,YAAWC,KACvCC,WAAY,SAAAD,GAAG,OAAIvD,EAASwD,YAAWD,KACvCE,YAAa,SAAAF,GAAG,OAAIvD,EAASyD,YAAYF,QAOnB3D,EA9EA,SAAAZ,GAAU,IACxBsE,EAA+CtE,EAA/CsE,WAAYD,EAAmCrE,EAAnCqE,MAAOG,EAA4BxE,EAA5BwE,WAAYC,EAAgBzE,EAAhByE,YAIjCC,EAAUC,cALe,EAMDC,mBAAS,IANR,mBAMxBrB,EANwB,KAMfsB,EANe,KAQ/B3D,qBAAU,WAENoD,EAAWf,KAEZ,CAACA,EAASe,IAGf,IAEMN,EAAOhE,EAAM8E,MAAMd,KAEvB,OACE,qCACE,uBAAM9D,UAAW6E,YAAgCf,EAAK,QAAtD,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOT,QAASA,EAASC,SARZ,SAAAwB,GAAC,OAAEH,EAAWG,EAAEC,OAAOhD,UASpC,cAAC,EAAD,CACEkB,UAAWI,EACXH,MAAO,SAAA4B,GACLH,EAAW,IACXL,UAKLH,GAASA,EAAM9D,QAAkB,MAAPyD,EACzB,cAAC,IAAD,CAAQ9D,UAAU,aAChB+B,MAAOsB,EACP2B,aAAa,EACbC,YAAa,EACbzB,SAAU,SAAA0B,GACRX,EAAYW,EAAYnD,OACxByC,EAAQW,KAAK,aAEfC,QAASjB,IAET,KAETA,GAASA,EAAM9D,QAAkB,YAAPyD,EAE3B,qBAAK9D,UAAU,uBAAuBqF,GAAG,uBAAzC,SACSlB,EAAMlE,KAAI,SAAC+D,EAAM7D,GAAP,OACT,cAAC,EAAD,CAAwB6D,KAAMA,GAAb7D,QAEb,KAWR,cAAC,EAAD,CAAgB2D,KAAOA,WAiBd7C","file":"static/js/6.78c88643.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\nconst Trending = React.memo(props => {\r\n  const { ary } = props;\r\n  return (\r\n    <ul className =\"search-list\">\r\n      <span className =\"search-text search-text--smaller\">Trending: </span>\r\n      {ary.map((item, index, arr) => (\r\n        <li className =\"search-text search-text--smaller search-list-item\" key={index}>\r\n          {index === arr.length - 1 ? item : item + \",\"}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n});\r\n\r\nexport default Trending;\r\n","import * as React from \"react\";\r\n\r\nconst Header = React.memo(() => {\r\n  return (\r\n    <>\r\n      <span className=\"search__unsplash\">Unsplash</span>\r\n      <h1 className=\"search__header search-text search-text--small\">\r\n        The internet’s source of\r\n        <a className=\"search__license\" href=\"https://unsplash.com/license\">\r\n          {\" \"}\r\n          freely-usable images\r\n        </a>\r\n      </h1>\r\n      <p className=\"search__motto\">Powered by creators everywhere.</p>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Header;\r\n","import React, { useEffect} from \"react\";\r\nimport {withRouter} from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport Form from \"./Form\";\r\nimport {trending} from '../js/fixtures';\r\nimport {fetchBackgroundImage} from '../redux/imagesReducer';\r\nimport Trending from './details/Trending';\r\nimport Header from './details/Header';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nconst Section = (props) => {\r\nconst {fetchBackgroundImage, backgroundImage} = props;\r\n\r\n  useEffect(() => {\r\n  \r\n    fetchBackgroundImage();\r\n}, [fetchBackgroundImage]);\r\n\r\n  return (\r\n    <section className ='search__background'>\r\n    <div className=\"form_container\">\r\n      <Header />\r\n      <Form /> \r\n      <Trending ary ={trending}/>\r\n      <ErrorMessage />\r\n    </div>\r\n    </section>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  backgroundImage: state.images.backgroundImage,\r\n    \r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchBackgroundImage: () => dispatch(fetchBackgroundImage()),\r\n});\r\n\r\n const SearchSection = withRouter(connect(mapStateToProps, mapDispatchToProps)(Section));\r\n export default SearchSection;\r\n\r\n\r\n// unsplash.photos.getRandomPhoto({ username: \"naoufal\" })\r\n//   .then(toJson)\r\n//   .then(json => {\r\n    \r\n//   });","import * as React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearError } from \"../redux/imagesReducer\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MyAlert = withStyles({\r\n  root: {\r\n    background: \"#688B69;\",\r\n    color: \"#F5F2AA\",\r\n    fontSize: \"1.25rem\",\r\n    border: \"1px solid 4d684d\",\r\n    boxShadow:\r\n      \"inset 0 0 5px #4d684d, 0 1px 2px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.07), 0 4px 8px rgba(0,0,0,0.07), 0 8px 16px rgba(0,0,0,0.07), 0 16px 32px rgba(0,0,0,0.07), 0 32px 64px rgba(0,0,0,0.07)\",\r\n  },\r\n})(Alert);\r\n\r\nconst Message = (props) => {\r\n  \r\n  const { isOpen, close, message } = props;\r\n\r\n  return (\r\n    <Snackbar open={isOpen} autoHideDuration={5000} onClose={close}>\r\n      <MyAlert severity=\"success\" variant=\"filled\">\r\n        Wystąpił błąd:\r\n        <br />\r\n         {message}\r\n        <br />\r\n      </MyAlert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n  close: () => dispatch(clearError()),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isOpen: state.images.error.value,\r\n  message: state.images.error.code,\r\n});\r\n\r\nconst ErrorMessage = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Message);\r\n\r\nexport default ErrorMessage;\r\n\r\n// prepareLoadedCoinsMessage.propTypes ={\r\n//   open:PropTypes.bool,\r\n//   count:PropTypes.str,\r\n//   close:PropTypes.func\r\n// }","import * as React from 'react';\r\n\r\n\r\nconst SearchButton = () => {\r\n    return (\r\n      <button className=\"form__button\">\r\n        <svg width=\"32\" height=\"32\" className=\"form__svg\" version=\"1.1\" viewBox=\"0 0 32 32\" aria-hidden=\"false\">\r\n          <path d=\"M31 28.64l-7.57-7.57a12.53 12.53 0 1 0-2.36 2.36l7.57 7.57zm-17.5-6a9.17 9.17 0 1 1 6.5-2.64 9.11 9.11 0 0 1-6.5 2.67z\"></path>\r\n        </svg>\r\n      </button>\r\n    );\r\n  };\r\n\r\nexport default SearchButton;\r\n  ","import * as React from 'react';\r\n\r\nconst ClearButton = props => {\r\n    const { isVisible, click } = props;\r\n  \r\n    return isVisible.length ? (\r\n      <button className=\"form__input-clear\" onClick={click}>\r\n        <svg width=\"32\" height=\"32\" className=\"form__input-clear-svg\" version=\"1.1\" viewBox=\"0 0 32 32\" aria-hidden=\"false\">\r\n          <path d=\"M25.33 8.55l-1.88-1.88-7.45 7.45-7.45-7.45-1.88 1.88 7.45 7.45-7.45 7.45 1.88 1.88 7.45-7.45 7.45 7.45 1.88-1.88-7.45-7.45z\"></path>\r\n        </svg>\r\n      </button>\r\n    ) : null;\r\n  };\r\n\r\n  export default ClearButton;\r\n  ","import * as React from \"react\";\r\n\r\nconst Input = props => {\r\n  const { pattern, callback } = props;\r\n  return <input type=\"text\" className=\"form__input\" value={pattern} onChange={callback} autoCapitalize=\"none\" placeholder=\"Search free high-resolution photos\" />;\r\n};\r\n\r\nexport default Input;\r\n","import * as React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HintsMessage = props => {\r\n  const { isVisible, path } = props;\r\n  const classy = (path === '/images')? \"noHints--short search-text--dark\" : 'noHints search-text--dark'\r\n\r\n  //return isVisible ? <h2 className=\"noHints search-text--dark\">Nie znaleziono podpowiedzi dla wprowadzonej sekwencji znaków</h2> : null;\r\n  return isVisible ? <h2 className = {classy} >Nie znaleziono podpowiedzi dla wprowadzonej sekwencji znaków</h2> : null;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isVisible: state.images.hintsMessageVisible,\r\n});\r\n\r\nconst NoHintsMessage = connect(mapStateToProps)(HintsMessage);\r\nexport default NoHintsMessage;\r\n","import * as React from \"react\";\r\n\r\nconst ImagesHint = props => {\r\n  const { hint } = props;\r\n  return hint && hint.label && hint.value ? (\r\n    <div data-image_hint={hint.value} className=\"images-hint\">\r\n      {hint.label}\r\n    </div>\r\n  ) : null;\r\n};\r\nexport default ImagesHint;\r\n","import React, { useState, useEffect} from \"react\";\r\nimport {useHistory, withRouter} from \"react-router\";\r\nimport Select from \"react-select\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchImages, fetchHints, clearHints} from \"../redux/imagesReducer\";\r\nimport SearchButton from './details/SearchButton';\r\nimport ClearButton from './details/ClearButton';\r\nimport Input from './details/Input';\r\nimport {createFormStyleLocationRelative} from '../js/common';\r\nimport NoHintsMessage from './details/NoHintsMessage';\r\nimport ImagesHint from \"./details/ImagesHint\";\r\n\r\n\r\nconst UnconnectedForm = props => {\r\n  const { fetchHints, hints, clearHints, fetchImages } = props;\r\n\r\n  //const { fetchHints, hints, clearHints, fetchImages, path } = props;\r\n  \r\n  const history = useHistory();\r\n  const [pattern, setPattern] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n   \r\n      fetchHints(pattern);\r\n    \r\n  }, [pattern, fetchHints]);\r\n\r\n\r\nconst updatePattern =e=>setPattern(e.target.value);\r\n\r\nconst path = props.match.path;\r\n\r\n  return (\r\n    <>\r\n      <form className={createFormStyleLocationRelative(path,'form')}> \r\n        <SearchButton />\r\n        <Input pattern={pattern} callback ={updatePattern} /> \r\n        <ClearButton\r\n          isVisible={pattern}\r\n          click={e => {\r\n            setPattern(\"\");\r\n            clearHints();\r\n          }}\r\n        />\r\n      </form>\r\n\r\n      {hints && hints.length && (path==='/')? (\r\n        <Select className='select-top'\r\n          value={pattern}\r\n          isClearable={true}\r\n          menuIsOpen ={true}\r\n          onChange={selectValue => {\r\n            fetchImages(selectValue.value);\r\n            history.push('./images');\r\n          }}\r\n          options={hints}\r\n        />\r\n      ) : null}\r\n\r\n{hints && hints.length && (path==='/images')?(\r\n\r\n<div className=\"images-hints-wrapper\" id=\"images-hints-wrapper\">\r\n        {hints.map((hint, index) => (\r\n          <ImagesHint key={index} hint={hint} />\r\n        ))}\r\n      </div>):null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <NoHintsMessage path ={path}/>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchHints: str => dispatch(fetchHints(str)),\r\n  clearHints: str => dispatch(clearHints(str)),\r\n  fetchImages: str => dispatch(fetchImages(str)),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  hints: state.images.hints,\r\n});\r\n\r\nconst Form = withRouter(connect(mapStateToProps, mapDispatchToProps)(UnconnectedForm));\r\n\r\nexport default Form;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}
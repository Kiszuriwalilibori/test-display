{"version":3,"sources":["components/details/Trending.jsx","components/details/Header.jsx","components/SearchSection.jsx","components/ErrorMessage.jsx","components/details/SearchButton.jsx","components/details/ClearButton.jsx","components/details/Input.jsx","components/details/NoHintsMessage.jsx","components/details/ImagesHint.jsx","components/Form.jsx"],"names":["Trending","React","props","ary","className","map","item","index","arr","length","Header","href","SearchSection","withRouter","connect","dispatch","fetchBackgroundImage","useEffect","Form","trending","ErrorMessage","MyAlert","withStyles","root","background","color","fontSize","border","boxShadow","Alert","state","isOpen","images","error","value","message","code","close","clearError","open","autoHideDuration","onClose","severity","variant","SearchButton","width","height","version","viewBox","aria-hidden","d","ClearButton","isVisible","click","onClick","Input","pattern","callback","type","onChange","autoCapitalize","placeholder","NoHintsMessage","hintsMessageVisible","classy","path","ImagesHint","hint","label","data-image_hint","hints","fetchHints","str","clearHints","fetchImages","history","useHistory","useState","setPattern","match","keydownHandler","useCallback","debounce","e","key","elements","document","querySelectorAll","Array","from","includes","textContent","push","keydowner","onKeyDown","createFormStyleLocationRelative","onSubmit","preventDefault","target","id","isClearable","menuIsOpen","selectValue","options"],"mappings":"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","file":"static/js/6.f428979a.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Trending = React.memo(props => {\r\n  \r\n  const { ary } = props;\r\n  return (\r\n    <ul className =\"search-list\">\r\n      <span className =\"search-text search-text--smaller\">Trending: </span>\r\n      {ary.map((item, index, arr) => (\r\n        <li className =\"search-text search-text--smaller search-list-item\" key={index}>\r\n          {index === arr.length - 1 ? item : item + \",\"}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n});\r\n\r\nexport default Trending;\r\nTrending.propTypes = {ary:PropTypes.arrayOf(PropTypes.string)};","import * as React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nconst Header = React.memo(() => {\r\n  return (\r\n    <>\r\n      <span className=\"search__unsplash\">Unsplash</span>\r\n      <h1 className=\"search__header search-text search-text--small\">\r\n        The internet’s source of\r\n        <a className=\"search__license\" href=\"https://unsplash.com/license\">\r\n          {\" \"}\r\n          freely-usable images\r\n        </a>\r\n      </h1>\r\n      <p className=\"search__motto\">Powered by creators everywhere.</p>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport Form from \"./Form\";\r\nimport { trending } from \"../js/fixtures\";\r\nimport { fetchBackgroundImage } from \"../redux/imagesReducer\";\r\nimport Trending from \"./details/Trending\";\r\nimport Header from \"./details/Header\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = props => {\r\n  const { fetchBackgroundImage } = props;\r\n\r\n  useEffect(() => {\r\n    fetchBackgroundImage();\r\n  }, [fetchBackgroundImage]);\r\n\r\n  return (\r\n    <section className=\"search__background\">\r\n      <div className=\"form_container\" >\r\n        <Header />\r\n        <Form />\r\n        <Trending ary={trending} />\r\n        <ErrorMessage />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchBackgroundImage: () => dispatch(fetchBackgroundImage()),\r\n});\r\n\r\nconst SearchSection = withRouter(connect(null, mapDispatchToProps)(Section));\r\nexport default SearchSection;\r\n\r\nSection.propTypes = { fetchBackgroundImage: PropTypes.func };\r\n","import * as React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearError } from \"../redux/imagesReducer\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MyAlert = withStyles({\r\n  root: {\r\n    background: \"#688B69;\",\r\n    color: \"#F5F2AA\",\r\n    fontSize: \"1.25rem\",\r\n    border: \"1px solid 4d684d\",\r\n    boxShadow:\r\n      \"inset 0 0 5px #4d684d, 0 1px 2px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.07), 0 4px 8px rgba(0,0,0,0.07), 0 8px 16px rgba(0,0,0,0.07), 0 16px 32px rgba(0,0,0,0.07), 0 32px 64px rgba(0,0,0,0.07)\",\r\n  },\r\n})(Alert);\r\n\r\nconst Message = (props) => {\r\n  \r\n  const { isOpen, close, message } = props;\r\n\r\n  return (\r\n    <Snackbar open={isOpen} autoHideDuration={5000} onClose={close}>\r\n      <MyAlert severity=\"success\" variant=\"filled\">\r\n        Wystąpił błąd:\r\n        <br />\r\n         {message}\r\n        <br />\r\n      </MyAlert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n  close: () => dispatch(clearError()),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isOpen: state.images.error.value,\r\n  message: state.images.error.code,\r\n});\r\n\r\nconst ErrorMessage = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Message);\r\n\r\nexport default ErrorMessage;\r\n\r\nMessage.propTypes ={\r\n  isOpen:PropTypes.bool,\r\n  message:PropTypes.string,\r\n  close:PropTypes.func\r\n}","import * as React from 'react';\r\n\r\n\r\nconst SearchButton = () => {\r\n    return (\r\n      <button className=\"form__button\">\r\n        <svg width=\"32\" height=\"32\" className=\"form__svg\" version=\"1.1\" viewBox=\"0 0 32 32\" aria-hidden=\"false\">\r\n          <path d=\"M31 28.64l-7.57-7.57a12.53 12.53 0 1 0-2.36 2.36l7.57 7.57zm-17.5-6a9.17 9.17 0 1 1 6.5-2.64 9.11 9.11 0 0 1-6.5 2.67z\"></path>\r\n        </svg>\r\n      </button>\r\n    );\r\n  };\r\n\r\nexport default SearchButton;\r\n  ","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst ClearButton = props => {\r\n    const { isVisible, click } = props;\r\n  \r\n    return (!!isVisible.length) ? (\r\n      <button className=\"form__input-clear\" onClick={click}>\r\n        <svg width=\"32\" height=\"32\" className=\"form__input-clear-svg\" version=\"1.1\" viewBox=\"0 0 32 32\" aria-hidden=\"false\">\r\n          <path d=\"M25.33 8.55l-1.88-1.88-7.45 7.45-7.45-7.45-1.88 1.88 7.45 7.45-7.45 7.45 1.88 1.88 7.45-7.45 7.45 7.45 1.88-1.88-7.45-7.45z\"></path>\r\n        </svg>\r\n      </button>\r\n    ) : null;\r\n  };\r\n\r\n  export default ClearButton;\r\n\r\n  ClearButton.propTypes ={\r\n    isVisible:PropTypes.string,\r\n    click:PropTypes.func,\r\n  }\r\n  ","import * as React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = props => {\r\n  const { pattern, callback } = props;\r\n  \r\n  \r\n  return <input type=\"text\" className=\"form__input\" value={pattern} onChange={callback} autoCapitalize=\"none\" placeholder=\"Search free high-resolution photos\" />;\r\n};\r\n\r\nexport default Input;\r\n\r\nInput.propTypes = {\r\n  pattern: PropTypes.string,\r\n  callback : PropTypes.func,\r\n}\r\n","import * as React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HintsMessage = props => {\r\n  const { isVisible, path } = props;\r\n  const classy = (path === '/images')? \"noHints--short search-text--dark\" : 'noHints search-text--dark'\r\n  return isVisible ? <h2 className = {classy} >Nie znaleziono podpowiedzi dla wprowadzonego tekstu</h2> : null;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isVisible: state.images.hintsMessageVisible,\r\n});\r\n\r\nconst NoHintsMessage = connect(mapStateToProps)(HintsMessage);\r\nexport default NoHintsMessage;\r\n\r\n//HintsMessage.propTypes = PropTypes.string;","import * as React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nconst ImagesHint = props => {\r\n  const { hint } = props;\r\n  return hint && hint.label && hint.value ? (\r\n    <div data-image_hint={hint.value} className=\"images-hint\">\r\n      {hint.label}\r\n    </div>\r\n  ) : null;\r\n};\r\nexport default ImagesHint;\r\n\r\nImagesHint.propTypes = {hint: PropTypes.object};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory, withRouter } from \"react-router\";\r\nimport debounce from \"lodash/debounce\";\r\nimport Select from \"react-select\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchImages, fetchHints, clearHints } from \"../redux/imagesReducer\";\r\nimport SearchButton from \"./details/SearchButton\";\r\nimport ClearButton from \"./details/ClearButton\";\r\nimport Input from \"./details/Input\";\r\nimport { createFormStyleLocationRelative } from \"../js/common\";\r\nimport NoHintsMessage from \"./details/NoHintsMessage\";\r\nimport ImagesHint from \"./details/ImagesHint\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst UnconnectedForm = props => {\r\n  const { fetchHints, hints, clearHints, fetchImages } = props;\r\n  const history = useHistory();\r\n  const [pattern, setPattern] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchHints(pattern);\r\n  }, [pattern, fetchHints]);\r\n\r\n  const updatePattern = e => {\r\n    e.preventDefault();\r\n    setPattern(e.target.value);\r\n  };\r\n\r\n  const path = props.match.path;\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    return false;\r\n  };\r\n  \r\n\r\n  function keydowner (e) {\r\n    if (e.key === \"Enter\") {\r\n      var elements = document.querySelectorAll(\":hover\");\r\n      var arr = Array.from(elements);\r\n      const item = arr[arr.length - 1];\r\n      const classname = item.className;\r\n      if (classname.includes(\"option\")) {\r\n       \r\n        fetchImages(item.textContent);\r\n        history.push(\"./images\");\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const keydownHandler = useCallback(\r\n    debounce((e) => {\r\n      keydowner(e);\r\n    }, 300),\r\n    []\r\n  );\r\n\r\n\r\n  return (\r\n    <div onKeyDown ={keydownHandler}>\r\n      <form className={createFormStyleLocationRelative(path, \"form\")} onSubmit={handleSubmit}>\r\n        <SearchButton />\r\n        <Input pattern={pattern} callback={updatePattern} />\r\n        <ClearButton\r\n          isVisible={pattern}\r\n          click={e => {\r\n            setPattern(\"\");\r\n            clearHints();\r\n          }}\r\n        />\r\n      </form>\r\n\r\n      {hints && hints.length && path === \"/\" ? (\r\n        <Select\r\n          className=\"select-top\"\r\n          id=\"BigSelect\"\r\n          value={pattern}\r\n          isClearable={true}\r\n          menuIsOpen={true}\r\n          onChange={selectValue => {\r\n            fetchImages(selectValue.value);\r\n            history.push(\"./images\");\r\n          }}\r\n          options={hints}\r\n        />\r\n      ) : null}\r\n\r\n      {hints && hints.length && path === \"/images\" ? (\r\n        <div className=\"images-hints-wrapper\" id=\"images-hints-wrapper\">\r\n          {hints.map((hint, index) => (\r\n            <ImagesHint key={index} hint={hint} />\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n      <NoHintsMessage path={path} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchHints: str => dispatch(fetchHints(str)),\r\n  clearHints: str => dispatch(clearHints(str)),\r\n  fetchImages: str => dispatch(fetchImages(str)),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  hints: state.images.hints,\r\n});\r\n\r\nconst Form = withRouter(connect(mapStateToProps, mapDispatchToProps)(UnconnectedForm));\r\n\r\nexport default Form;\r\n\r\nUnconnectedForm.propTypes = {\r\n  fetchHints: PropTypes.func,\r\n  fetchImages: PropTypes.func,\r\n  clearHints: PropTypes.func,\r\n  hints: PropTypes.array,\r\n};\r\n"],"sourceRoot":""}